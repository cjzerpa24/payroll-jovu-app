/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, IsOptional, ValidateNested, IsString } from "class-validator";
import { Type } from "class-transformer";
import { DepartmentWhereUniqueInput } from "../../department/base/DepartmentWhereUniqueInput";
import { PayrollUpdateManyWithoutEmployeesInput } from "./PayrollUpdateManyWithoutEmployeesInput";
import { SalaryUpdateManyWithoutEmployeesInput } from "./SalaryUpdateManyWithoutEmployeesInput";

@InputType()
class EmployeeUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateOfJoining?: Date | null;

  @ApiProperty({
    required: false,
    type: () => DepartmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DepartmentWhereUniqueInput)
  @IsOptional()
  @Field(() => DepartmentWhereUniqueInput, {
    nullable: true,
  })
  department?: DepartmentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => PayrollUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => PayrollUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => PayrollUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  payrolls?: PayrollUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => SalaryUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => SalaryUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => SalaryUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  salaries?: SalaryUpdateManyWithoutEmployeesInput;
}

export { EmployeeUpdateInput as EmployeeUpdateInput };
